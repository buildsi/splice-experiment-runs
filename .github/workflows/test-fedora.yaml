name: ABI Fedora Diffs
on:
  pull_request: []
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix:
        # container, compiler inside to use, and name+version to save
        container: [['ghcr.io/buildsi/fedora:fedora-34', "34"],
                    ['ghcr.io/buildsi/fedora:fedora-35', "35"],
                    ['ghcr.io/buildsi/fedora:fedora-36', "36"],
                    ['ghcr.io/buildsi/fedora:fedora-37', "37"]]

    container:
      image: ${{ matrix.container[0] }}
      options: "--platform=linux/amd64"

    name: ${{ matrix.container[0] }} Fedora ${{ matrix.container[1] }}
    steps:
      - name: Show Job Config
        run: |
           echo ${{ matrix.container[0] }}
           echo ${{ matrix.container[1] }}

      - name: Make Space For Build
        run: |        
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install system debuginfo files
        run: |
          dnf install -y dnf-plugins-core
          packages=$(find /lib64/ /lib/ -type f -name "*.so.*" | xargs rpm -qf | sort -u)
          for p in ${packages[*]}; do dnf debuginfo-install -y $p; done

      - name: Install Fedora Libs
        run: |
          mkdir -p ./libs
          /bin/bash fedora_installs.sh

      - name: Copy debuginfo files
        run: |
          mkdir -p ./libs/debug
          ln -fs /usr/lib/debug/usr -t libs/debug
          ln -fs /usr/lib/debug/.dwz -t libs/debug

      - name: Copy library files
        run: |
          # Copy files from /lib and /lib64 with names containing the
          # string '.so' that are not symlinks and do not live in /lib/debug
          find /lib/ /lib64/ -type f -iname "*.so*" ! -type l -not -path "/lib/debug/*" -exec cp -u --parents {} libs/ \;

      - name: View Fedora Libs
        run: tree ./libs

      - name: Upload Libs
        uses: actions/upload-artifact@v3
        with:
          name: fedora-libs-${{ matrix.container[1] }}
          path: ./libs

  abi:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        # Artifact pairs (named) for comparison)
        artifacts: [["fedora-libs-34", "fedora-libs-35"],
                    ["fedora-libs-34", "fedora-libs-36"],
                    ["fedora-libs-34", "fedora-libs-37"],
                    ["fedora-libs-35", "fedora-libs-36"],
                    ["fedora-libs-35", "fedora-libs-37"],
                    ["fedora-libs-36", "fedora-libs-37"]]

    # Any base container will do, we already have the libs!
    container:
      image: ghcr.io/buildsi/ubuntu:ubuntu-22.04
      options: "--platform=linux/amd64"

    name: ${{ matrix.artifacts[0] }} vs ${{ matrix.artifacts[1] }}
    steps:
    - name: Make More Room
      run: |        
        rm -rf /usr/share/dotnet
        rm -rf /opt/ghc

    - name: Update container base with predictors and spliced
      uses: buildsi/smeagle-examples/actions/install@main

    - name: Checkout
      uses: actions/checkout@v3

    - name: Download First Version
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.artifacts[0] }}
        path: first/

    - name: Download Second Version
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.artifacts[1] }}
        path: second/

    - name: View Artifacts Structure
      run: |
        ls first/
        ls second/

    - name: Compare Matching Libs
      run: |
        # Ensure we can see Python installs
        export PATH=/opt/conda/bin:$HOME/.local/bin:$PATH
        results_dir=/tmp/results
        cache_dir=/tmp/cache
        mkdir -p ${results_dir} ${cache_dir}
        export SPLICED_SMEAGLE_CACHE_DIR=${cache_dir}
        export SPLICED_ABILAB_CACHE_DIR=${cache_dir}
        printf "Results: ${results_dir}\n"
        printf "Cache: ${cache_dir}\n"
        export PATH=/usr/local/bin:${HOME}/.local/bin:/usr/bin:$PATH
        outdir="${results_dir}/fedora"
        mkdir -p ${outdir}
        export LIBABIGAIL_DEBUGINFO_DIR1=first/debug
        export LIBABIGAIL_DEBUGINFO_DIR2=second/debug
        export ABILAB_DEBUGINFO_DIR1=first/debug
        export ABILAB_DEBUGINFO_DIR2=second/debug
        printf "/opt/conda/bin/python test_libs.py ./first ./second ${{ matrix.artifacts[0] }} ${{ matrix.artifacts[1] }} ${outdir}\n"
        /opt/conda/bin/python test_libs.py ./first ./second ${{ matrix.artifacts[0] }} ${{ matrix.artifacts[1] }} ${outdir}

    - name: Save result artifact
      uses: actions/upload-artifact@v3
      with:
         name: ${{ matrix.artifacts[0] }}-vs-${{ matrix.artifacts[1] }}
         path: /tmp/results
