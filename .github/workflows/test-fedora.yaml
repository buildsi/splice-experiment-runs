name: ABI Fedora Diffs
on:
  pull_request: []
  workflow_dispatch: 
    inputs:
      start:
        description: 'Start index for doing analysis'
        required: true
        default: 0
      stop:
        description: 'End index for doing analysis'
        required: true
        default: 2000

env:
  start: 0
  stop: 50

jobs:
  abi:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Artifact pairs (named) pre-generated in repos for comparison)
        artifacts: [["fedora-libs-34", "fedora-libs-35"],
                    ["fedora-libs-34", "fedora-libs-36"],
                    ["fedora-libs-34", "fedora-libs-37"],
                    ["fedora-libs-35", "fedora-libs-36"],
                    ["fedora-libs-35", "fedora-libs-37"],
                    ["fedora-libs-36", "fedora-libs-37"]]

    # Any base container will do, we already have the libs!
    container:
      image: ghcr.io/buildsi/ubuntu:ubuntu-22.04
      options: "--platform=linux/amd64"

    name: ${{ matrix.artifacts[0] }} vs ${{ matrix.artifacts[1] }}
    steps:

    - name: Update container base with predictors and spliced
      uses: buildsi/smeagle-examples/actions/install@main

    - name: Checkout
      uses: actions/checkout@v3

    - name: Make More Room
      run: /bin/bash ./clean.sh

    # Pre-generated artifacts from
    # https://github.com/buildsi/splice-experiment-runs/actions/runs/3014787550
    - name: Download First Version
      env:
        INPUT_OUTPUT: ./first
        INPUT_NAME: ${{ matrix.artifacts[0] }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export PATH=/opt/conda/bin:$HOME/.local/bin:$PATH
        python3 get_artifacts.py 3014787550
        
    - name: Download Second Version
      env:
        INPUT_OUTPUT: ./first
        INPUT_NAME: ${{ matrix.artifacts[1] }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export PATH=/opt/conda/bin:$HOME/.local/bin:$PATH
        python3 get_artifacts.py 3014787550

    - name: Reconstruct debug directories
      run: |
        cd first/usr/lib/debug
        for d in bin lib lib64 sbin; do ln -sf usr/$d $d; done
        cd -
        cd second/usr/lib/debug
        for d in bin lib lib64 sbin; do ln -sf usr/$d $d; done

    - name: View Artifacts Structure
      run: |
        apt-get update && apt-get install -y tree        
        tree first/
        tree second/

    - name: Compare Matching Libs
      env:
        start: ${{ inputs.start != '' || env.start }}
        stop: ${{ inputs.stop != '' || env.stop }}
      run: |
        export PATH=/opt/conda/bin:$HOME/.local/bin:$PATH
        results_dir=/tmp/results
        cache_dir=/tmp/cache
        mkdir -p ${results_dir} ${cache_dir}
        # cache will save time but take up more space
        export SPLICED_SMEAGLE_CACHE_DIR=${cache_dir}
        export SPLICED_ABILAB_CACHE_DIR=${cache_dir}
        printf "Results: ${results_dir}\n"
        printf "Cache: ${cache_dir}\n"
        export PATH=/usr/local/bin:${HOME}/.local/bin:/usr/bin:$PATH
        outdir="${results_dir}/fedora"
        mkdir -p ${outdir}
        export LIBABIGAIL_DEBUGINFO_DIR1=$PWD/first/usr/lib/debug
        export LIBABIGAIL_DEBUGINFO_DIR2=$PWD/second/usr/lib/debug
        export ABILAB_DEBUGINFO_DIR1=$PWD/first/usr/lib/debug
        export ABILAB_DEBUGINFO_DIR2=$PWD/second/usr/lib/debug
        export ABILAB_DISABLE_REPORTS=true
        printf "/opt/conda/bin/python test_libs.py ./first ./second --os_a ${{ matrix.artifacts[0] }} --os_b ${{ matrix.artifacts[1] }} --outdir ${outdir} --start ${{ env.start }} --stop ${{ env.stop }}\n"
        /opt/conda/bin/python test_libs.py ./first ./second --os_a ${{ matrix.artifacts[0] }} --os_b ${{ matrix.artifacts[1] }} --outdir ${outdir} --start ${{ env.start }} --stop ${{ env.stop }}

    - name: Save result artifact
      uses: actions/upload-artifact@v3
      with:
         name: ${{ matrix.artifacts[0] }}-vs-${{ matrix.artifacts[1] }}
         path: /tmp/results
