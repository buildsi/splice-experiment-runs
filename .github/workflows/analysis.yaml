name: Spliced Analysis
on:
  workflow_dispatch: 
    inputs:
      package_pattern:
        description: 'Name of experiment.yaml pattern (in buildsi/spliced-experiment splices) to test.'
        required: true
      skip_smeagle:
        description: 'Skip Smeagle if it caused the runs to fail (e.g., memory)'
        required: true
        type: boolean
jobs:
  prepare:
    runs-on: ubuntu-latest    
    permissions:
      packages: read
    outputs:
      commands: ${{ steps.generate.outputs.commands }}
    name: Generate Matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: buildsi/splice-experiment         
      - name: Generate matrix
        id: generate
        env:
          pattern: ${{ github.event.inputs.package_pattern }}
          skip_smeagle: ${{ github.event.inputs.skip_smeagle }}
        run: |
           mkdir -p ./results
           if [[ "${skip_smeagle}" == "true" ]]; then
               python scripts/submit_jobs.py ./diffs/ ./results/ --pattern ${pattern} --skip-smeagle --json
           else
               python scripts/submit_jobs.py ./diffs/ ./results/ --pattern ${pattern} --json
           fi 
           
  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.prepare.outputs.commands) }}
        arch: ['linux/amd64'] # ,'linux/ppc64le','linux/arm64']
        
    container:
      image: ghcr.io/buildsi/spliced-experiment
      options: "--platform=${{ matrix.arch }}"

    name: ${{ matrix.job.slug }}
    steps:
      - name: Show Job Config
        run: |
           echo ${{ matrix.job.command }}
           echo ${{ matrix.job.outfile }}
           echo ${{ matrix.job.slug }}

      - name: Checkout
        uses: actions/checkout@v3
      - name: Make Space For Build
        run: |        
          ls /usr/share
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc

      - name: Spack install cache
        uses: actions/cache@v3
        with:
          key: spack-opt-v1-${{ matrix.job.slug }}
          path: /spack/opt

      - name: Run Build
        env:
          cmd: ${{ matrix.job.command }}
          outfile:
        run: |
           mkdir -p ${{ matrix.job.outdir }}
           printf "${cmd}\n"
           ${cmd}
           cat ${{ matrix.job.outfile }}

      - name: Save result artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.job.slug }}
          path: /results

      - name: Save Smeagle Cache
        uses: actions/upload-artifact@v3
        with:
          name: cache-smeagle-${{ matrix.job.slug }}
          path: /cache/smeagle-spack
