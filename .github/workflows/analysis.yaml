name: Spliced Analysis
on:
  pull_request: []
  workflow_dispatch: 
    inputs:
      package_pattern:
        description: 'Name of experiment.yaml pattern (in buildsi/spliced-experiment splices) to test.'
        required: true
      skip_smeagle:
        description: 'Skip Smeagle if it caused the runs to fail (e.g., memory)'
        required: true
        type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix:
        # container, compiler inside to use, and name+version to save
        container: [['ghcr.io/buildsi/libabigail:latest', 'gcc' , 'gcc-11.2.0'],
                    ['ghcr.io/buildsi/libabigail:latest', 'g++' , 'g++-11.2.0'],
                    ['ghcr.io/buildsi/libabigail:latest', 'clang' , 'clang-14.0.0'],
                    ['ghcr.io/buildsi/llvm:llvm-3.3', 'clang', 'clang-3.3'],
                    ['ghcr.io/buildsi/llvm:llvm-4', 'clang', 'clang-4'],
                    ['ghcr.io/buildsi/llvm:llvm-5', 'clang', 'clang-5'],
                    ['ghcr.io/buildsi/llvm:llvm-6', 'clang', 'clang-6'],
                    ['ghcr.io/buildsi/llvm:llvm-7', 'clang', 'clang-7'],
                    ['ghcr.io/buildsi/llvm:llvm-8', 'clang', 'clang-8'],
                    ['ghcr.io/buildsi/llvm:llvm-9', 'clang', 'clang-8'],
                    ['ghcr.io/buildsi/llvm:llvm-10', 'clang', 'clang-10'],
                    ['ghcr.io/buildsi/llvm:llvm-11', 'clang', 'clang-11'],
                    ['ghcr.io/buildsi/llvm:llvm-12', 'clang', 'clang-12'],
                    ['ghcr.io/buildsi/llvm:llvm-13', 'clang', 'clang-13'],
                    ['ghcr.io/buildsi/llvm:llvm-14', 'clang', 'clang-14']]
        
    container:
      image: ${{ matrix.container[0] }}
      options: "--platform=linux/amd64"

    name: ${{ matrix.container[2] }}
    steps:
      - name: Show Job Config
        run: |
           echo ${{ matrix.container[0] }}
           echo ${{ matrix.container[1] }}
           echo ${{ matrix.container[2] }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: buildsi/smeagle-examples
          ref: thaines/breakages/enum

      - name: Make Space For Build
        run: |        
          ls /usr/share
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc

      - name: Update container base with predictors and spliced
        run: |
          apt-get update && apt-get install -y build-essential gfortran patchelf unzip bzip2 python3-pip libssl-dev vim
          alias pip='pip3'

          pip install ipython
          CMAKE_VERSION=3.20.4
          curl -s -L https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-linux-x86_64.sh > cmake.sh
          sh cmake.sh --prefix=/usr/local --skip-license
          rm cmake.sh

          git clone https://github.com/vsoch/cle && \
          cd cle && \

          # archinfo, pyvex, pyelftools, then cle
          pip install wheel && \
          pip install git+https://github.com/angr/archinfo && \
          pip install git+https://github.com/angr/pyvex && \
          pip install git+https://github.com/eliben/pyelftools && \
          pip install .
          pip install git+https://github.com/vsoch/elfcall@tweaks
          pip install git+https://github.com/buildsi/spliced@add/diff
          cd ../
          rm -rf ./cle

          # Install abi-laboratory tools
          git clone https://github.com/lvc/abi-dumper && \
          cd abi-dumper && \
          make install prefix=/usr && \
          cd ../ && \
          rm -rf abi-dumper && \
          git clone https://github.com/lvc/abi-compliance-checker && \
          cd abi-compliance-checker && \
          make install prefix=/usr && \
          cd ../ && \
          rm -rf ./abi-compliance-checker

      - name: Run Build
        env:
          SPLICED_SMEAGLE_CACHE_DIR: /cache
          SPLICED_ABILAB_CACHE_DIR: /cache
          CC: ${{ matrix.container[1] }}
          compiler: ${{ matrix.container[2] }}
          skip_smeagle: ${{ github.event.inputs.skip_smeagle }}
        run: |
           root=$PWD
           ls
           mkdir -p /tmp/diff-results
           rm -rf _development
           for category in $(ls -d */); do
               printf "Inspecting category ${category}\n"
               cd ${root}/${category}
               original=example
               if ! test -f ${original}; then
                   original=lib.so
               fi
               original=$(realpath ${original})
               printf "Found libA ${original}\n"
               if test -d ./breaks; then
                   for dir in $(ls ./breaks); do
                       printf "Looking at break ${dir}\n"
                       break_dir=${root}/${category}/breaks/${dir}
                       cd ${break_dir}
                       ls
                       make CC=${CC}
                       splice="example"
                       if ! test -f ${splice}; then
                           splice=lib.so
                       fi
                       splice=$(realpath ${splice})
                       printf "Found libB ${splice}\n"
                       outdir="/tmp/diff-results/${category}/${dir}/${CC}"
                       mkdir -p ${outdir}
                       outfile="${outdir}/experiment.json"
                       echo ${compiler} >> ${outdir}/compiler.txt
                       cmd="spliced diff --package ${original} --splice ${splice} --runner manual --outfile ${outfile} --skip spack-test" 
                       if [[ "${skip_smeagle}" == "true" ]]; then
                           cmd="${cmd} --skip-smeagle"
                       fi
                       printf "${cmd}\n"
                       cat ${outfile}
                   done
               fi
           done
      - name: Save result artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.job.container[2] }}
          path: /tmp/diff-results

      - name: Save Smeagle Cache
        uses: actions/upload-artifact@v3
        with:
          name: cache-smeagle-${{ matrix.job.container[2] }}
          path: /cache/smeagle-spack
